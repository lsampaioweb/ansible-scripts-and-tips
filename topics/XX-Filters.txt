Filters: upper, lower, title.
{{ name | upper }}
{{ name | lower }}
{{ name | title }}

{{ [1, 3, 2] | min }}
{{ [1, 3, 2] | max }}
{{ [1, 3, 2] | unique }}

{{ 100 | random }}
{{ ["a", "b"] | join(" ") }}
{{ csv_string | split(",") }}

# Display year-month-day
{{ '%Y-%m-%d' | strftime }} # => "2021-03-19"

# Display hour:min:sec
{{ '%H:%M:%S' | strftime }} # => "21:51:04"

# Use ansible_date_time.epoch fact
{{ '%Y-%m-%d %H:%M:%S' | strftime(ansible_date_time.epoch) }}

- name: Install Dependencies
  hosts: localhost
  vars:
    web_dependencies:
         - python
         - python-setuptools
    sql_dependencies:
         - python
         - python-mysqldb
  tasks:
  - name: Install dependencies
    apt: name='{{ item }}' state=present
    with_items: '{{ sql_dependencies | union(web_dependencies) }}'

- name: Generate random file name
  hosts: localhost
  tasks:
  - name: Create file
    file:
      path: /tmp/random_file"{{ 1000 | random }}"
      state: touch

- name: Test valid IP Address
  hosts: localhost
  vars:
    ip_address: 192.168.1.6
  tasks:
  - name: Test IP Address
    debug:
      msg: IP Address = {{ ip_address | ipaddr }}

Handling undefined variables
  Providing default values
  {{ some_variable | default(5) }}

Making variables optional
- name: Touch files with an optional mode
  ansible.builtin.file:
    dest: "{{ item.path }}"
    state: touch
    mode: "{{ item.mode | default(omit) }}"
  loop:
    - path: /tmp/foo
    - path: /tmp/bar
    - path: /tmp/baz
      mode: "0444"

{{ (status == 'needs_restart') | ternary('restart', 'continue') }}
{{ enabled | ternary('no shutdown', 'shutdown', omit) }}